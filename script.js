// v8: Team filter segmented toggle (All / Boys / Girls / Unknown) with live counters.

const NAMES = [
  "1Dont3now_tv",
  "1ns0mn1a_bot",
  "20JP",
  "21PilotLyfe",
  "2hnoah",
  "303_Gaming",
  "5unah",
  "6abz",
  "6kid",
  "6ossuxa",
  "9222",
  "_VES",
  "A_Quip",
  "Aaronblatt",
  "abblebeezz",
  "AbiCoops",
  "Acid_Pie",
  "AdamnAdam",
  "AdamNotAvailable",
  "AdamPlays",
  "Agourk",
  "Agroed",
  "Ah0j",
  "AhinaHayamaTTV",
  "AHRCEUS",
  "airyawn",
  "Aiyri",
  "Ajaxmvb",
  "akc0303",
  "Akirini",
  "ALBrassard",
  "Aliface",
  "AlinaOverpowered",
  "allthatchelsea",
  "AlphaFounded",
  "Alphyre_YT",
  "Alsogone",
  "AltemusX",
  "Altermond",
  "aluee",
  "Alzakz",
  "Am_ehx",
  "Ambicioso",
  "Amisu",
  "Amzo_",
  "An_Accountant",
  "Anchyuwu",
  "AnEmily",
  "Anfasith",
  "AnibaeVT",
  "Anima_Ryuu",
  "AnkaaGrey",
  "ann3xiety",
  "Annekie",
  "Anniel96",
  "annupoica",
  "Antonisu",
  "AntToesKnees",
  "Aopks",
  "Apollo30",
  "AppleW",
  "aprilmaple5620",
  "Aprite",
  "ARareLemon",
  "AriesAkana",
  "Arin524",
  "arrf",
  "Aryxion",
  "Asaf_Playz",
  "AshBroz1234",
  "ashsart23",
  "Ashuen",
  "Aslinxzz",
  "AsoEu",
  "AstraCA",
  "AStrangeCreature",
  "Asttaroth",
  "asvuep",
  "Atomsee",
  "AuddRee",
  "Aulig",
  "Aur1e",
  "AuroraKatVA",
  "avieluu",
  "Avoma",
  "aw3someg1rl",
  "awesomeness0880",
  "AwsomeHoneyDog",
  "Ax0lott",
  "ayqh",
  "b00fswag",
  "babyorbii",
  "BadRexx",
  "Balc0n",
  "BatzyBear",
  "bearbubb",
  "Bearcraft02",
  "bebopskye",
  "beefyboulevard",
  "BeeinT",
  "beepbeep_cheeryo",
  "BenDotEXE",
  "Berna7224",
  "Bimpy416",
  "Bingostill",
  "BinnBean",
  "bipolarobot",
  "Bittersw3et",
  "Bizzy_Brit",
  "Blinci",
  "BlitzStream",
  "bluetenmeer",
  "bolh3h",
  "BombsterG",
  "BonkersJack",
  "BooPenelopeApple",
  "BottledSalad",
  "BowlV2",
  "BOX_Eggsotic",
  "boysbehating",
  "braedy12",
  "BrasenPlayz",
  "BreadleyYourHero",
  "britknees",
  "Broodling",
  "BROWN_YT",
  "Bumpkin_Boii",
  "Bun_Bunana",
  "BunnMom",
  "Busvicke123",
  "ButtonMash5000",
  "Byzantonia",
  "caiuwus",
  "callkhada",
  "CallMeCass",
  "CaluMerge",
  "CamYeaaH",
  "candiivulpix",
  "Canopaa",
  "CaptainConer",
  "captainlights",
  "CaramelExpert59",
  "cardinroo",
  "CareBearKarliTV",
  "careye",
  "CarlyPumpkin",
  "CarnivalCow",
  "CarrieSprout",
  "CarterPJ",
  "Catrinformation",
  "CeliaRAT",
  "CerealTomato",
  "Cernunnos280",
  "ChairX_",
  "charlesispi",
  "Charliebubblegum",
  "charm_y3",
  "chcw",
  "CheByrechik",
  "CheddarE",
  "CheesyMcRibby",
  "Chiara_00",
  "Chiffoi",
  "ChimeraSea",
  "Chiolite",
  "chloq",
  "chrislaban",
  "CisiCisiC",
  "Civilmeowmeow",
  "CleverlyStupid",
  "CocoTakumi",
  "ColbytheWolby",
  "ColeRoll",
  "conee",
  "COOLMOIVE24",
  "corblii",
  "Corporal_Jerry",
  "CorsairPotato",
  "Coulrs",
  "Countess0327",
  "cperc",
  "CrabbySleet3973",
  "Craftulu",
  "Crester_Craft",
  "Crusty435",
  "CrystalFang",
  "Cumi",
  "Cupcake6583",
  "cupOfGlass",
  "CustomExen",
  "Cvssiopeia",
  "Cy11",
  "Cyamusite",
  "Cyan_Ryu",
  "cyzz_",
  "da_monster_man",
  "Dachribal",
  "Daigrock",
  "daldott",
  "DalisVibing",
  "Dalrae",
  "Daltom",
  "Dan1k091132_",
  "DangerZone904",
  "darkleonard2",
  "darkskylord69",
  "DaTorchicPlayz",
  "dbsr1975",
  "DeadlyBoop",
  "deathrobloxian",
  "DecentGG",
  "Decxie",
  "Deedogs3742",
  "Deery",
  "Defnd",
  "Demirioo",
  "denisrabbits",
  "denkfout",
  "DerpDurCake",
  "DerpGTX",
  "DerpyFoxPlayz",
  "DesiDucky",
  "DeviHT",
  "dey_dreams",
  "DEYAA__H",
  "DiegoRdz",
  "DiizyMan",
  "Disorded",
  "DivineCreator",
  "Dono1harm",
  "DontTouchMyLife",
  "doodlexy",
  "DoopliGhost_",
  "DoppleDaddy",
  "Dowdens",
  "Dr_Padenski",
  "DrawnUnicorn631",
  "Drea2819",
  "Dream_Wisp",
  "DreChozen",
  "DrEvilsin",
  "dsate3",
  "dtnglo",
  "Duck_lmao",
  "Duckmain",
  "duckyluv",
  "duckynunu",
  "dummymajor",
  "Duzzza",
  "DVNone",
  "dvzixe",
  "Dylpyckles",
  "easyyuser",
  "EBOYCHAR",
  "EdHed",
  "Edweirdo87",
  "eggypoopoo",
  "ein_Holzkopf",
  "ElappoGamingYT",
  "ElDeathly",
  "elijah2589",
  "Elinii",
  "Elite1_1",
  "Elle33Heart",
  "Elyssen",
  "emilol",
  "emilroos",
  "EmilyOoi",
  "EminenceNShadows",
  "EmsMimi",
  "emsytart",
  "Epic_Facha",
  "EricSamme",
  "ermordete",
  "Estrellada",
  "EternalSunbear",
  "Etx_9",
  "Euraiyle",
  "EvelynIsAnOnion",
  "Everlynixx",
  "evesforrealz",
  "EvieBreevy",
  "Exc0mm",
  "Exquillity",
  "Faazazel",
  "fakeminecraftgf",
  "fallbirds",
  "FancyObiWan",
  "FatMonkeyKing",
  "fawries",
  "Fennik_td",
  "FerretStew",
  "fiiini",
  "FinlyKai",
  "Fistopop",
  "Flaccoz",
  "FlashyPig",
  "flcme",
  "Fleaket",
  "fliight",
  "Flindinho",
  "FloraKiiro",
  "flowerchld",
  "foinks",
  "Foolating",
  "Foxily",
  "FOXYIK",
  "fqln",
  "FrankyXXV",
  "Freshavocado0s",
  "FrontDeskLady",
  "Frotsey",
  "Frozenman",
  "Fryla",
  "Funtime333",
  "gabnonymous",
  "Gabs3030",
  "Galistic",
  "Gamdon",
  "GameIvan46",
  "GamingDucky",
  "GamingPrimos131",
  "GangstaAnt",
  "gdst",
  "GEMC",
  "GemeRyZ",
  "GeneralRoute",
  "GhettoHongky",
  "GizmoThePro",
  "glittryvirgo",
  "Goggleko",
  "GoIdenKnight",
  "Goncal0_",
  "GoodIceBear",
  "GOOEYBOY",
  "GoofyGeek",
  "Gooneev",
  "GracefulSlumber",
  "Grenexus",
  "grissemand123",
  "grschrLight",
  "Guon_",
  "H4jper",
  "haewonnnn",
  "Halocakii",
  "hann1ekin",
  "Hansite",
  "HansKinski",
  "Harazi_",
  "haumios",
  "HayIs4Hailey",
  "Haywolf_Gaming",
  "Hazse",
  "Healanii",
  "HeIIedonna",
  "Helmi_C",
  "Hengrove",
  "HeyItsJackM8",
  "highego",
  "HighRefreshRate",
  "HiiFren",
  "HiImCC",
  "HikaOKLM",
  "Hiratina",
  "HobarT551",
  "Hobikage",
  "Honeybee39",
  "honeyplantt",
  "hoppy819",
  "hotsaucebeats",
  "HouseofJuniper",
  "hpneybee",
  "HuiRen12",
  "HuliLan",
  "Hurcos",
  "Huskel",
  "HydroMC_",
  "HyperrVy",
  "iBeum",
  "IceyMim",
  "iEmmarie",
  "IGiveUpAtNames",
  "ihaltam",
  "iisolarwing",
  "IKTH",
  "illegalPie",
  "im_astepman",
  "Imkayzie",
  "ImKreet",
  "Inaudibley",
  "infernalily",
  "InfinateDreams",
  "Inforcerr",
  "Innaterook",
  "insanesam9",
  "isaacmc12",
  "isislimpinha",
  "Islandish",
  "ItsArrzee",
  "ItsEssieBee",
  "itsmegneko",
  "ItsMusketz",
  "ItsNaira",
  "itsTsunamiCat",
  "ItzzHanVT",
  "IzanitaManzanita",
  "Izice_",
  "izzyisswagger",
  "JackIsAnIdiot",
  "JaJoep",
  "Jakeroly",
  "Jamhalo",
  "jaredy00",
  "JasmineGamez",
  "Jawunleashed",
  "jaykey2227",
  "Jeonar",
  "JerryBS",
  "jessica49",
  "Jholl_",
  "JoesBizzareMama",
  "Jogg",
  "John_Fortnlte",
  "JojoDaYoyo",
  "jojoslices",
  "jojosolos",
  "jontop05",
  "JorgeSword",
  "Joshmanikus",
  "jpd07",
  "jpsm322",
  "JR_Prime",
  "Jsnop",
  "jubileee",
  "Judyloon",
  "Juli3887",
  "JuliYatta",
  "junstrivia",
  "Jupugsa",
  "JustAnzia",
  "JustAthena",
  "JustIcey22",
  "JustJorja",
  "JustLaurita",
  "JustMel65",
  "JustQuacko",
  "KaczeKaczek",
  "Kaeiis",
  "kaffnip",
  "KairiNuu",
  "kaleste",
  "kami_lotik",
  "kamiiix",
  "kasixna",
  "Kat_the_Chimera",
  "katelynsarahxx",
  "KateyElise021",
  "kaychiru",
  "KayRotz",
  "KayyMC",
  "KhaosKorps",
  "KikuAlayne",
  "kimchiu",
  "KingBayne",
  "Kissinger",
  "kitakyu",
  "Klathulimancer",
  "KokoNataa",
  "komaiii",
  "Koniri",
  "Korulein",
  "kosvy",
  "Kovix254",
  "Kroftmen_x7",
  "Krystalsg",
  "Ksidi",
  "kurohaise",
  "Kusak4be",
  "kyleighcake",
  "laalaaleela",
  "Labno",
  "lakeshore5",
  "LaKitty101",
  "LanceWhy",
  "Larbloo",
  "LargoN_Balboa",
  "laura_kill_you",
  "laurvin",
  "LaytzTBE",
  "lazys",
  "LeCheesey",
  "LegHair",
  "LegoFriend",
  "Lessodds",
  "LevelArzt",
  "Levente00____",
  "Lexiliy",
  "leylinka",
  "LGWaffle",
  "Lianam",
  "Lianeu",
  "Libly",
  "LifeIsPatato",
  "lightrocket2",
  "LilHapa",
  "LilithLuvsYa",
  "lillianjl",
  "LinariaMun_Kin",
  "Lingulini",
  "LittlePoohBearr",
  "LizzeMaguire",
  "LlamaSticks",
  "LocutisBorgCube",
  "Loeufys",
  "Lokayy",
  "LolEgirl",
  "LonelyMinotaur7",
  "Longbuds",
  "LooLooPlus",
  "Lopa",
  "LorBuddha",
  "LordBaconNugget",
  "Lordendermen",
  "Lothmeer",
  "LTalk",
  "LuciusTheFoolish",
  "lucyburger",
  "LuhviKyu",
  "LukaTV939",
  "Lumoniam",
  "Lunaoculus",
  "luvcatss",
  "Lynnyxx",
  "LyraTheDrunk",
  "LyteNCrypt",
  "M0SHi_M00",
  "Ma1sy",
  "maenniee",
  "Magetro21",
  "magicsings",
  "MagmaSolo",
  "Mahala_Pink",
  "Maiki_",
  "MajesticFizzi",
  "Malkshake",
  "maltebossking67",
  "manazelfkndazel",
  "Marciismx",
  "Marian_143",
  "Mariitv",
  "Martineli_47",
  "martucarp",
  "MaryIsHere_",
  "Maskyzee",
  "MasterDrey",
  "MasterPaco",
  "MasterYou5",
  "MatchaFoxVR",
  "Mateodlb06",
  "matthew0605",
  "Mavac",
  "mayfol",
  "Meenuhh",
  "MegaMeat_MC",
  "Megamuncher75",
  "Mel1403",
  "MelBun13",
  "MelissMines",
  "Melizsa",
  "Mermilke",
  "Mewella",
  "MIA0005",
  "MiaTwintania",
  "Microspr",
  "MidnightMadnessx",
  "MidnightZ168",
  "Minegan999",
  "MinerTasha",
  "Minesuklaa",
  "MioRhythm",
  "MissSpacePants",
  "Mitchellangeio",
  "Mitzefy",
  "MiyukiShioru",
  "MiyuNijiiro",
  "Molyhydra",
  "MommMercy",
  "Mommy3240",
  "monkeyzeus1",
  "monstera_fox",
  "Montlwyrm",
  "Moodyne",
  "Mookachuu",
  "MoonBunny30",
  "Mooncakexo",
  "MoonRaySK",
  "mooTMZ",
  "MouseyEnder",
  "mouthfulofmiIk",
  "mp_5_9",
  "MPBilegt",
  "Mr_Rempel",
  "MrMoonLanding",
  "ms_Kats",
  "MS_Mounts",
  "munchie_obj",
  "munchytaco",
  "Muraneez",
  "Mxcking",
  "MystHartz",
  "Mythical001",
  "MythicLuna",
  "n00laa",
  "NAJT",
  "Namit__",
  "naniodyy",
  "Narnia",
  "Naxilion",
  "naynay954",
  "necialex",
  "Necroncraft",
  "neoning",
  "Neptsune",
  "Nerdgazmic",
  "NgoWay",
  "Niagiri",
  "nicksteel01",
  "Nifrira",
  "NightieYT",
  "Nightshadow1154",
  "ninageee",
  "Nixolay",
  "nocrypa",
  "NoDeal",
  "NolanCat",
  "Nominalgravy",
  "Nopaa",
  "Norbinio",
  "northeness",
  "Northernside",
  "NotDivine_",
  "NotHydra_",
  "NotJano",
  "NotSoSerious2",
  "NotVico",
  "NovaLegacy13",
  "NovumChase",
  "nuggetsgang",
  "nuhzyyyy",
  "Nullus_1",
  "NulPac",
  "nyaukii",
  "NyeBuoi",
  "Nysily",
  "Oblivion7852",
  "Oceana13",
  "oceann8",
  "oGarfield",
  "OGChiknNuggies",
  "Oglittlehippie",
  "OhItsPiper",
  "okbuni",
  "olsbuh",
  "opcl",
  "opvlent",
  "OrangeDogArts",
  "Osymandes",
  "Ouss3409",
  "Owiethe",
  "OwnEight",
  "OxyCGolem",
  "Ozzie750",
  "P1nkyP4nda18",
  "PaoMiaw",
  "Parrm",
  "PassionPig",
  "PastelleShadow",
  "Pautx",
  "PC_Cycle",
  "Phantrump",
  "phoefi",
  "Pikach_us",
  "PinkieElle",
  "piplupso",
  "pipluVT",
  "pIscript",
  "PixelmonGirl",
  "PlebCS",
  "Plebiain",
  "pohke",
  "Pomcheck",
  "potatopawz",
  "pqlv",
  "predii",
  "PrincessPinecone",
  "prolix",
  "Pseudii",
  "psyomnix",
  "Puffachoo",
  "PunchBag",
  "punkqween",
  "puoz",
  "Purple_T0ast",
  "PurplH0sEr",
  "pyqz",
  "qTaiwan",
  "Qu1nten",
  "QueenEllaBean",
  "Queeni3_",
  "r4yzi",
  "r_3nder",
  "Rabbity11",
  "rahws",
  "rainbowgirl1",
  "Rainnnnnnnnnnnn",
  "rainwet",
  "Ralph",
  "Ramseyer",
  "RatTactics_",
  "RavenYT",
  "realmunyi",
  "Reaper131",
  "Rebecka",
  "Reccoss",
  "RedDuke45",
  "Redlive",
  "regsitaa",
  "ReinFantasy",
  "rezeirl",
  "RhymeTheRapper",
  "RIngenious",
  "RMF1002",
  "RobTipsTV",
  "Rockess",
  "RogueGlitch",
  "Rorachh",
  "RoseRocketYT",
  "RoseTheGuy",
  "Rotivenos",
  "rotonde",
  "rotsurge",
  "RoyalGoogy",
  "RoyalPear_",
  "Rozwellian",
  "RubbishNotTrash",
  "RubyPlaysTV",
  "rusty_courage",
  "Rvin_Mudbone",
  "Rwssia",
  "RynniBee",
  "RYZZIE_1337",
  "sachizu",
  "Sadaze",
  "Saiikotic",
  "Sajjal_N",
  "Sakrey",
  "salmahayek",
  "Salmonazo",
  "Sams",
  "saniixd",
  "SAR0CK",
  "sardina_",
  "SatelliteSelina",
  "schpood",
  "Scorch3103",
  "scotteh",
  "Screenless",
  "Scuttles_225",
  "Sdxxxt_",
  "Sealeh",
  "SeekerOWisdom",
  "Selestialz",
  "SenpaiDejv",
  "Seodrific",
  "serendipityplays",
  "setwria",
  "SexySmokey",
  "Sh1ro_07",
  "Sharese",
  "shayellow",
  "SHeep003",
  "Shekai",
  "shelby395",
  "shimbigail",
  "ShinyPikachu",
  "Shonyx",
  "shotbyalexa",
  "ShoxxyLul",
  "ShrubsRugs",
  "Shxnji",
  "SildenIda",
  "SimpSam",
  "SirEzran",
  "SitzKrieg0",
  "Skeke1",
  "Skucc",
  "sky_dragon_24",
  "SleepySloth_99",
  "sleierslimeHD",
  "Slicknts",
  "SlideSide",
  "Slimey64",
  "SlushieVRC",
  "Snackaroniii",
  "snailpirate",
  "SnapsR",
  "sneakytt",
  "snusu",
  "soda33",
  "SOMANEN",
  "SomeoneNamedEd",
  "SomeSugarBoi",
  "Soniced",
  "Soupports",
  "Sp1cy_cheese",
  "sp33dygonzales77",
  "Spacdogi",
  "Space_Squeakers",
  "Spark2200",
  "Spellcrafter54",
  "SpicyLuna",
  "spiritwolf33333",
  "spookydog_66",
  "spvre",
  "Squ1nz",
  "Squibee",
  "squinkles",
  "Squirtle2021",
  "StanVee",
  "stardustm00n",
  "Starrfrog",
  "StarVeon97",
  "stellarxoxo",
  "StillDreams777",
  "StillnotLilly",
  "stratospherex",
  "Stravilight",
  "StrawberryHolly",
  "Stromoto",
  "Stuffyjoe",
  "Styne",
  "subscribemrbeast",
  "SunsetMagic",
  "Sunwishi",
  "superdudeman75",
  "superduperbro",
  "SuperMango28",
  "superminerJG",
  "supertrooper394",
  "SurgePlugs",
  "SUVIKA",
  "Sweeter67",
  "Swifyz",
  "Swight",
  "swillee",
  "swyshi",
  "Sydnoii",
  "T3Z2",
  "Taasin",
  "Taenyaki",
  "taffyforever",
  "TaneeshaHogan",
  "TangentAbyss674",
  "taxi_zab",
  "tayaruss",
  "taytte",
  "TearsFromV",
  "Terrandth",
  "That_Abyss_Egg",
  "That_Ozzy",
  "Thatderpdoe123",
  "THE_DRIFTER_823",
  "The_Ford_",
  "The_Kings_Ghost",
  "TheBigNo",
  "TheCanadianCooki",
  "TheFshy",
  "TheLunarLex",
  "TheNerdyGeek17",
  "TheOneChaira",
  "ThePetrichoral",
  "TheRealVintage",
  "TheRedEclipse",
  "TheSadGuy1",
  "TheSaphy",
  "Timdecoole123",
  "tizzari",
  "toby8889",
  "TofuPrincess",
  "TomatoPaste_",
  "tonedPipes",
  "Tooz_",
  "torinoemi",
  "toroc4t",
  "tortillamonster_",
  "Toxictaco25",
  "toxumi",
  "tr2sh",
  "Trabss",
  "TradeFav444",
  "TrashTripp",
  "TripleLion",
  "TrueAR",
  "TrueRecluse",
  "tsuneluse",
  "Tuppeeyy",
  "TurboPiggyYT",
  "Turret1XD",
  "twistyn0odle",
  "tzd",
  "ubhi",
  "Utiba",
  "vairywings",
  "VanBrickenBrock",
  "vBlaster",
  "Velis_",
  "velvux",
  "Vengeance82",
  "Vevibelle",
  "Vexnzo",
  "Viancyy",
  "vicklerick",
  "Vik_the_Viking",
  "Vilorence",
  "VindicatorFrag",
  "Vinnyzz",
  "VioletFire43",
  "VioletOcean",
  "VirentTarot",
  "Virin1",
  "vorpaelyzis",
  "vvjellyfish",
  "Vyliaa",
  "W1izX__",
  "Waazix19",
  "Wahlund",
  "Warden_InDark",
  "weckman06",
  "WeebyCraft",
  "Weedyoz",
  "werewolfs4lifes",
  "Weseley",
  "whim5y",
  "wiigg1es",
  "WildAgent47",
  "Wilkman",
  "WindyBea",
  "WithyCreeps",
  "wojcake",
  "Wolfscale",
  "WooshuRandom",
  "Wylltea",
  "wynforthewin",
  "x_Lancer_x",
  "x_stormi_x",
  "xAkacjax",
  "XLR8FX",
  "XoSodaXo",
  "xPhil79x",
  "xq_a",
  "xTeffax",
  "xxKaYotiC",
  "XXKXNG",
  "XxMakio",
  "xXSaltRatXx",
  "Xymusus",
  "Xziob",
  "Yakibear",
  "Yekoi",
  "ymis",
  "YokaSiri",
  "YokingRice",
  "YouLuckyDuck",
  "Youngson_A",
  "YourStandard",
  "YPTA__",
  "YsSavitar",
  "Yummy_Twinkies",
  "YummyYaamiiii",
  "YunaNanase02",
  "yuskan",
  "YuwenEffie",
  "yviaa",
  "zaroman",
  "zavvygamer",
  "zcani",
  "ZeoliteX",
  "ZER0_7EVEN",
  "ZeSnowy",
  "ZFDfilms",
  "Zigy",
  "Zinclly",
  "zolizo89",
  "zombcal",
  "zombreyy",
  "Zucch1n1Loaf",
  "ZumaTGW",
  "Zurius3",
  "zyephy",
  "zzodiaxee"
];

const FACTIONS = [
  "The Peak",
  "HD Clan",
  "Greeko Boys",
  "Men in Suits",
  "The Veterans",
  "Goober Bay",
  "The Pharaonate",
  "Ironcrest Clan",
  "Boys Next Door",
  "F.U.N. Fellas",
  "The Archivists' Library",
  "Domnul University",
  "DUDE CITY",
  "The Egalitarian Order",
  "Brociples",
  "The Bard's Hall",
  "Derpublic",
  "None / Unassigned"
];
const API = "/.netlify/functions/assignments";

const grid = document.getElementById("grid");
const template = document.getElementById("cardTemplate");
const search = document.getElementById("search");
const factionFilter = document.getElementById("factionFilter");
const leadersOnly = document.getElementById("leadersOnly");
const modal = document.getElementById("editorModal");
const modalTitle = document.getElementById("modalTitle");
const modalFaction = document.getElementById("modalFaction");
const modalAllegiances = document.getElementById("modalAllegiances");
const modalForm = document.getElementById("modalForm");

// counters
const countBoysEl = document.getElementById("count-boys");
const countGirlsEl = document.getElementById("count-girls");
const aliveBoysEl = document.getElementById("alive-boys");
const aliveGirlsEl = document.getElementById("alive-girls");
// team filter
const teamFilterRadios = document.querySelectorAll('input[name="teamFilter"]');

function headURL(name, size=100) { return `https://minotar.net/helm/${encodeURIComponent(name)}/${size}.png`; }

let state = { assignments: {}, cards: new Map(), current: null };

function populateFactionControls() {
  const opts = ['<option value="">All factions</option>'].concat(FACTIONS.map(f => `<option value="${f}">${f}</option>`));
  factionFilter.innerHTML = opts.join("");
  if (modalFaction) modalFaction.innerHTML = FACTIONS.map(f => `<option value="${f}">${f}</option>`).join("");
  if (modalAllegiances) modalAllegiances.innerHTML = FACTIONS.filter(f => f !== "None / Unassigned").map(f => `<option value="${f}">${f}</option>`).join("");
}

function recOf(n) { return state.assignments[n]; }
function factionOf(n) { const r = recOf(n); return !r ? "" : (typeof r === "string" ? r : (r.faction || "")); }
function genderOf(n)  { const r = recOf(n); return (!r || typeof r === "string") ? "" : (r.gender || ""); }
function leaderOf(n)  { const r = recOf(n); return (!r || typeof r === "string") ? false : !!r.leader; }
function deputyOf(n)  { const r = recOf(n); return (!r || typeof r === "string") ? false : !!r.deputy; }
function statusOf(n)  { const r = recOf(n); return (!r || typeof r === "string") ? "alive" : (r.status || "alive"); }
function allegsOf(n)  { const r = recOf(n); return (!r || typeof r === "string") ? [] : (Array.isArray(r.allegiances) ? r.allegiances : []); }
function blueOrderOf(n) { const r = recOf(n); return (!r || typeof r === "string") ? false : !!r.blueOrder; }

function setCardGenderClass(card, gender){ card.classList.remove("boy","girl"); if(gender==="boy")card.classList.add("boy"); if(gender==="girl")card.classList.add("girl"); }
function setCardLeaderClass(card, isLeader){ card.classList.toggle("leader", !!isLeader); }
function setCardDeputyClass(card, isDeputy){ card.classList.toggle("deputy", !!isDeputy); }
function setCardStatusClass(card, status){ card.classList.toggle("dead", status === "dead"); }

function updateTitleTooltip(node, name) {
  const faction = factionOf(name) || "None / Unassigned";
  const allegs = allegsOf(name);
  const extra = allegs.length ? ` | Allegiances: ${allegs.join(", ")}` : "";
  const isLeader = leaderOf(name) || deputyOf(name) ? " | Leader: Yes" : "";
  const status = statusOf(name);
  node.title = `Faction: ${faction}${extra} | Status: ${status}${isLeader}`;
}

function makeCard(name) {
  const node = template.content.firstElementChild.cloneNode(true);
  const nameEl = node.querySelector(".name");
  const tagEl = node.querySelector(".faction-tag");
  const img = node.querySelector(".head");
  const btn = node.querySelector(".head-btn");
  const badge = node.querySelector(".badge-blueorder");

  nameEl.textContent = name;
  img.src = headURL(name, 100);
  img.alt = name + " head";
  if (badge) badge.src = "assets/blueorder.png";

  const faction = factionOf(name) || "None / Unassigned";
  tagEl.textContent = faction + (allegsOf(name).length ? "  🤝" : "");
  updateTitleTooltip(node, name);

  setCardGenderClass(node, genderOf(name));
  setCardLeaderClass(node, leaderOf(name));
  setCardDeputyClass(node, deputyOf(name));
  setCardStatusClass(node, statusOf(name));
  node.classList.toggle("has-blueorder", blueOrderOf(name));

  btn.addEventListener("click", () => openModal(name));

  state.cards.set(name, node);
  return node;
}

function renderAll() {
  grid.innerHTML = "";
  const frag = document.createDocumentFragment();

  const q = (search.value || "").trim().toLowerCase();
  const f = factionFilter.value || "";
  const leadersOnlyChecked = leadersOnly.checked;
  const teamVal = (document.querySelector('input[name="teamFilter"]:checked')?.value || "").toLowerCase();

  NAMES.forEach((name) => {
    const faction = factionOf(name) || "None / Unassigned";
    const isLeaderish = leaderOf(name) || deputyOf(name);
    const g = genderOf(name) || ""; // "" = Unknown

    if (q && !name.toLowerCase().includes(q)) return;
    if (f && faction !== f) return;
    if (leadersOnlyChecked && !isLeaderish) return;
    if (teamVal === "boy" && g !== "boy") return;
    if (teamVal === "girl" && g !== "girl") return;
    if (teamVal === "unknown" && g !== "") return;

    const card = state.cards.get(name) || makeCard(name);
    card.querySelector(".faction-tag").textContent = faction + (allegsOf(name).length ? "  🤝" : "");
    updateTitleTooltip(card, name);
    setCardGenderClass(card, g);
    setCardLeaderClass(card, isLeaderish);
    setCardDeputyClass(card, deputyOf(name));
    setCardStatusClass(card, statusOf(name));
    card.classList.toggle("has-blueorder", blueOrderOf(name));
    frag.appendChild(card);
  });

  grid.appendChild(frag);
  updateCounters();
}

function openModal(name) {
  state.current = name;
  modalTitle.textContent = "Edit — " + name;

  const g = genderOf(name);
  modalForm.querySelectorAll('input[name="gender"]').forEach(r => (r.checked = (r.value === g)));
  if (!modalForm.querySelector('input[name="gender"]:checked')) modalForm.querySelector('#g-none').checked = true;

  const st = statusOf(name);
  modalForm.querySelector('#s-alive').checked = (st !== "dead");
  modalForm.querySelector('#s-dead').checked  = (st === "dead");

  const faction = factionOf(name) || "None / Unassigned";
  modalFaction.value = faction;

  const leader = leaderOf(name);
  const deputy = deputyOf(name);
  modalForm.querySelector('#leader-yes').checked = !!leader;
  modalForm.querySelector('#leader-no').checked  = !leader;
  modalForm.querySelector('#deputy-yes').checked = !!deputy;
  modalForm.querySelector('#deputy-no').checked  = !deputy;

  const allegs = new Set(allegsOf(name));
  ;[...modalAllegiances.options].forEach(opt => opt.selected = allegs.has(opt.value));

  const bo = blueOrderOf(name);
  modalForm.querySelector('#blueorder-yes').checked = !!bo;
  modalForm.querySelector('#blueorder-no').checked  = !bo;

  modal.showModal();
}

function selectedAllegiances() { return [...modalAllegiances.options].filter(o => o.selected).map(o => o.value); }

async function saveModal() {
  const name = state.current; if (!name) return;
  const gender = modalForm.querySelector('input[name="gender"]:checked')?.value || "";
  const status = modalForm.querySelector('input[name="status"]:checked')?.value || (modalForm.querySelector('#s-dead').checked ? "dead" : "alive");
  const faction = (modalFaction.value === "None / Unassigned") ? "" : modalFaction.value;
  const leader = modalForm.querySelector('#leader-yes')?.checked === true;
  const deputy = modalForm.querySelector('#deputy-yes')?.checked === true;
  const allegiances = selectedAllegiances().filter(a => a && a !== "None / Unassigned");
  const blueOrder = modalForm.querySelector('#blueorder-yes')?.checked === true;

  const prev = state.assignments[name] || {};
  state.assignments[name] = {
    faction: (faction ?? prev.faction ?? ""),
    gender:  (gender  ?? prev.gender  ?? ""),
    leader:  (typeof leader === "boolean" ? leader : !!prev.leader),
    deputy:  (typeof deputy === "boolean" ? deputy : !!prev.deputy),
    status:  (status === "dead" ? "dead" : "alive"),
    allegiances: Array.isArray(allegiances) ? allegiances : (prev.allegiances || []),
    blueOrder: (typeof blueOrder === "boolean" ? blueOrder : !!prev.blueOrder),
  };
  renderAll();

  try {
    const res = await fetch(API, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ name, faction, gender, leader, deputy, status, allegiances, blueOrder })
    });
    if (!res.ok) throw new Error(await res.text());
  } catch (e) {
    alert("Failed to save. Reloading...");
    location.reload();
  }
}

modal.addEventListener("close", () => { state.current = null; });
document.getElementById("saveBtn").addEventListener("click", async (e) => { e.preventDefault(); await saveModal(); modal.close(); });
search.addEventListener("input", renderAll);
factionFilter.addEventListener("change", renderAll);
leadersOnly.addEventListener("change", renderAll);
teamFilterRadios.forEach(r => r.addEventListener("change", renderAll));

function updateCounters() {
  let boys = 0, girls = 0, aliveBoys = 0, aliveGirls = 0;
  for (const name of NAMES) {
    const g = genderOf(name);
    const alive = statusOf(name) !== "dead";
    if (g === "boy") { boys++; if (alive) aliveBoys++; }
    else if (g === "girl") { girls++; if (alive) aliveGirls++; }
  }
  if (countBoysEl) countBoysEl.textContent = boys;
  if (countGirlsEl) countGirlsEl.textContent = girls;
  if (aliveBoysEl) aliveBoysEl.textContent = aliveBoys;
  if (aliveGirlsEl) aliveGirlsEl.textContent = aliveGirls;
}

async function loadAll() {
  const res = await fetch(API, { cache: "no-store" });
  if (!res.ok) throw new Error("Failed to load assignments");
  const map = await res.json();

  const normalized = {};
  for (const name of NAMES) {
    const v = map[name];
    if (!v) continue;
    if (typeof v === "string") normalized[name] = { faction: v, gender: "", leader: false, deputy: false, status: "alive", allegiances: [], blueOrder: false };
    else normalized[name] = {
      faction: v.faction || "",
      gender:  v.gender  || "",
      leader:  !!v.leader,
      deputy:  !!v.deputy,
      status:  (v.status === "dead" ? "dead" : "alive"),
      allegiances: Array.isArray(v.allegiances) ? v.allegiances : [],
      blueOrder: !!v.blueOrder
    };
  }
  return normalized;
}

function init() { populateFactionControls(); loadAll().then(d => { state.assignments = d; renderAll(); }).catch(() => renderAll()); }
init();
